@inherits UmbracoTemplatePage
@{

    var homePage = Umbraco.TypedContentAtRoot().FirstOrDefault(x => x.ContentType.Alias == "HomePage");
    if (homePage != null && homePage.Id > 0)
    {
        
    var level2ParentPage = homePage;
    if (Model.Content.Level != 1)
        {
        level2ParentPage = Model.Content.Level == 2 ? Model.Content : Model.Content.Parent;
        }
    var level3Pages = homePage.Children.Where(childPage => childPage.IsVisible() && !childPage.GetPropertyValue<bool>("hideFromMenu")); 
    
    if (level2ParentPage != null && level2ParentPage.Id > 0)
        {
        var level2ParentPageTitle = level2ParentPage.Name;
        if (level2ParentPage.HasProperty("linkTittle") && level2ParentPage.HasValue("linkTittle"))
            {
            level2ParentPageTitle = level2ParentPage.GetPropertyValue("linkTittle").ToString();
            }
            if (level2ParentPage.Children.Any(childPage => childPage.IsVisible() && !childPage.GetPropertyValue<bool>("hideFromMenu")))
            {
                level3Pages = level2ParentPage.Children.Where(childPage => childPage.IsVisible() && !childPage.GetPropertyValue<bool>("hideFromMenu"));
            }

            <div class="col-md-3">

                    @*<div class="sidebar-box">
                        <form class="search-form" method="get" role="form">
                            <input type="text" class="form-control" placeholder="Search...">
                            <button type="submit" class="submit-btn"><i class="fa fa-search"></i></button>
                        </form>
                    </div>*@

                    <div class="sidebar-box">
                        <h4>
                            In
                            <a href="@level2ParentPage.Url" title="@level2ParentPageTitle">
                                @level2ParentPageTitle
                            </a>
                            section...
                        </h4>
                        <ul class="category-list list-unstyled">
                            @foreach (var level3Page in level3Pages)
                                {
                                var level3PageTitle = level3Page.Name;
                                if (level3Page.HasProperty("linkTittle") && level3Page.HasValue("linkTittle"))
                                    {
                                    level3PageTitle = level3Page.GetPropertyValue("linkTittle").ToString();
                                    }
                                <li>
                                    <a href="@level3Page.Url" title="@level3PageTitle">
                                        @level3PageTitle
                                    </a>
                                </li>
                                }
                        </ul>
                    </div>
                </div>
            }
        }
}